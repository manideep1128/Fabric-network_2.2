version: '3.4'

networks:
  byfn:
    external:
      name: fabric

services:
  peer0-site3-v2soft-com:
    image: hyperledger/fabric-peer:2.2
    container_name: peer0-site3-v2soft-com
    hostname: peer0.site3.v2soft.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.site3.v2soft.com
      - CORE_PEER_LOCALMSPID=Site3MSP
      - CORE_PEER_ADDRESS=peer0.site3.v2soft.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051      
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.site3.v2soft.com:11051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.site3.v2soft.com:12051
      - CORE_PEER_CHAINCODEADDRESS=peer0.site3.v2soft.com:11052
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site3.v2soft.com/peers/peer0.site3.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site3.v2soft.com/peers/peer0.site3.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer0-site3:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 11051
        target: 11051
        mode: host
    networks:
      byfn:
        aliases:
          - peer0.site3.v2soft.com

  peer1-site3-v2soft-com:
    container_name: peer1-site3-v2soft-com
    hostname: peer1.site3.v2soft.com
    image: hyperledger/fabric-peer:2.2
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.site3.v2soft.com
      - CORE_PEER_LOCALMSPID=Site3MSP
      - CORE_PEER_ADDRESS=peer1.site3.v2soft.com:12051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:12051      
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:12052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.site3.v2soft.com:12051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.site3.v2soft.com:11051
      - CORE_PEER_CHAINCODEADDRESS=peer1.site3.v2soft.com:12052
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site3.v2soft.com/peers/peer1.site3.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site3.v2soft.com/peers/peer1.site3.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer1-site3:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 12051
        target: 12051
        mode: host
    networks:
      byfn:
        aliases:
          - peer1.site3.v2soft.com
  
  peer0-site4-v2soft-com:
    image: hyperledger/fabric-peer:2.2
    container_name: peer0-site4-v2soft-com
    hostname: peer0.site4.v2soft.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.site4.v2soft.com
      - CORE_PEER_LOCALMSPID=Site4MSP
      - CORE_PEER_ADDRESS=peer0.site4.v2soft.com:13051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:13051      
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:13052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.site4.v2soft.com:13051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.site4.v2soft.com:14051
      - CORE_PEER_CHAINCODEADDRESS=peer0.site4.v2soft.com:13052
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site4.v2soft.com/peers/peer0.site4.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site4.v2soft.com/peers/peer0.site4.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer0-site4:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 13051
        target: 13051
        mode: host
    networks:
      byfn:
        aliases:
          - peer0.site4.v2soft.com

  peer1-site4-v2soft-com:
    container_name: peer1-site4-v2soft-com
    hostname: peer1.site4.v2soft.com
    image: hyperledger/fabric-peer:2.2
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_default
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.site4.v2soft.com
      - CORE_PEER_LOCALMSPID=Site4MSP
      - CORE_PEER_ADDRESS=peer1.site4.v2soft.com:14051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:14051      
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:14052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.site4.v2soft.com:14051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.site4.v2soft.com:13051
      - CORE_PEER_CHAINCODEADDRESS=peer1.site4.v2soft.com:14052
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site4.v2soft.com/peers/peer1.site4.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site4.v2soft.com/peers/peer1.site4.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer1-site4:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 14051
        target: 14051
        mode: host
    networks:
      byfn:
        aliases:
          - peer1.site4.v2soft.com

  peer0-site1-v2soft-com:
    image: hyperledger/fabric-peer:2.2
    container_name: peer0-site1-v2soft-com
    hostname: peer0.site1.v2soft.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.site1.v2soft.com
      - CORE_PEER_LOCALMSPID=Site1MSP
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.site1.v2soft.com:7052
      - CORE_PEER_ADDRESS=peer0.site1.v2soft.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.site1.v2soft.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.site1.v2soft.com:8051
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site1.v2soft.com/peers/peer0.site1.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site1.v2soft.com/peers/peer0.site1.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer0-site1:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 7051
        target: 7051
        mode: host
    networks:
      byfn:
        aliases:
          - peer0.site1.v2soft.com

  peer1-site1-v2soft-com:
    container_name: peer1-site1-v2soft-com
    hostname: peer1.site1.v2soft.com
    image: hyperledger/fabric-peer:2.2
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.site1.v2soft.com
      - CORE_PEER_LOCALMSPID=Site1MSP
      - CORE_PEER_ADDRESS=peer1.site1.v2soft.com:8051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.site1.v2soft.com:8051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.site1.v2soft.com:7051
      - CORE_PEER_CHAINCODEADDRESS=peer1.site1.v2soft.com:8052
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site1.v2soft.com/peers/peer1.site1.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site1.v2soft.com/peers/peer1.site1.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer1-site1:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 8051
        target: 8051
        mode: host
    networks:
      byfn:
        aliases:
          - peer1.site1.v2soft.com

  peer0-site2-v2soft-com:
    image: hyperledger/fabric-peer:2.2
    container_name: peer0-site2-v2soft-com
    hostname: peer0.site2.v2soft.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.site2.v2soft.com
      - CORE_PEER_LOCALMSPID=Site2MSP
      - CORE_PEER_ADDRESS=peer0.site2.v2soft.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.site2.v2soft.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.site2.v2soft.com:10051
      - CORE_PEER_CHAINCODEADDRESS=peer0.site2.v2soft.com:9052
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site2.v2soft.com/peers/peer0.site2.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site2.v2soft.com/peers/peer0.site2.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer0-site2:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 9051
        target: 9051
        mode: host
    networks:
      byfn:
        aliases:
          - peer0.site2.v2soft.com
  
  peer1-site2-v2soft-com:
    container_name: peer1-site2-v2soft-com
    hostname: peer1.site2.v2soft.com
    image: hyperledger/fabric-peer:2.2
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.site2.v2soft.com
      - CORE_PEER_LOCALMSPID=Site2MSP
      - CORE_PEER_ADDRESS=peer1.site2.v2soft.com:10051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:10052
      - CORE_PEER_LISTENADDRESS=0.0.0.0:10051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.site2.v2soft.com:10051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.site2.v2soft.com:9051
      - CORE_PEER_CHAINCODEADDRESS=peer1.site2.v2soft.com:10052
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/site2.v2soft.com/peers/peer1.site2.v2soft.com/msp:/etc/hyperledger/fabric/msp
      - ./channel/crypto-config/peerOrganizations/site2.v2soft.com/peers/peer1.site2.v2soft.com/tls:/etc/hyperledger/fabric/tls
      - ../../backup/peer1-site2:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == ip-172-31-6-74
    ports:
      - published: 10051
        target: 10051
        mode: host
    networks:
      byfn:
        aliases:
          - peer1.site2.v2soft.com